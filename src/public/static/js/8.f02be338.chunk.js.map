{"version":3,"sources":["assets/sounds/ringtone_minimal.ogg","components/chat-app/chat-app-bar/chat-app-bar.styles.tsx","assets/logo_appbar.svg","utils/webRTC/webRTC.service.ts","utils/webSocketConnection/webSocket.types.ts","components/chat-app/chat-app-bar/chat-app-bar.component.tsx","components/chat-app/chat-direct-call/call-dialog/call-dialog.styles.tsx","utils/webSocketConnection/webSocketConnection.service.ts","redux/chat/chat.actions.ts","components/chat-app/chat-direct-call/call-dialog/call-dialog.component.tsx","components/chat-app/chat-direct-call/chat-direct-call.styles.tsx","components/chat-app/chat-direct-call/conversation-buttons/conversation-button/conversation-button.styles.tsx","components/chat-app/chat-direct-call/conversation-buttons/conversation-button/conversation-button.component.tsx","components/chat-app/chat-direct-call/conversation-buttons/conversation-buttons.styles.tsx","components/chat-app/chat-direct-call/conversation-buttons/conversation-buttons.component.tsx","components/chat-app/chat-direct-call/local-video-view/local-video-view.styles.tsx","components/chat-app/chat-direct-call/local-video-view/local-video-view.component.tsx","components/chat-app/chat-direct-call/remote-video-view/remote-video-view.styles.tsx","components/chat-app/chat-direct-call/remote-video-view/remote-video-view.component.tsx","components/chat-app/chat-direct-call/chat-direct-call.component.tsx","components/chat-app/chat-messenger/chat-messenger.styles.tsx","components/chat-app/chat-messenger/chat-message/chat-message.styles.tsx","components/chat-app/chat-messenger/chat-message/chat-message.component.tsx","components/chat-app/chat-messenger/chat-message-feed/chat-messages-feed.styles.tsx","components/chat-app/chat-messenger/chat-message-feed/chat-messages-feed.component.tsx","components/chat-app/chat-messenger/chat-message-box/chat-messages-box.component.tsx","components/chat-app/chat-messenger/chat-messenger.component.tsx","components/chat-app/chat-users/chat-user-item/chat-user-item.styles.tsx","components/chat-app/chat-users/chat-user-item/chat-user-item.component.tsx","components/chat-app/chat-users/chat-user-list/chat-user-list.styles.tsx","components/chat-app/chat-users/chat-user-list/chat-user-list.component.tsx","components/chat-app/chat-users/chat-users.component.tsx","pages/chat/chat.styles.tsx","pages/chat/chat.component.tsx"],"names":["chatAppBarStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","logo","maxHeight","maxWidth","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","id","className","transform","fill","d","points","SvgLogoAppbar","_ref","svgRef","titleId","props","xmlns","xmlnsXlink","preserveAspectRatio","viewBox","ref","callerConnection","receiverConnection","dataChannel","BROADCAST","CallAttemptResponse","CallConnectionStatus","ForwardRef","ChatAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","dispatch","useDispatch","AppBar","position","Toolbar","Typography","variant","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","signOutStart","callDialogStyles","paper","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","dialogText","whiteSpace","overflow","textOverflow","CallDialogToolTip","withStyles","tooltip","common","white","fontSize","Tooltip","configuration","iceServers","urls","constraints","video","audio","invite","RTCPeerConnection","createDataChannel","localStream","store","getState","getTracks","track","addTrack","ontrack","stream","streams","setRemoteStream","ondatachannel","channel","onopen","console","log","onmessage","message","String","data","setNewTextMessage","from","date","Date","handleNegotiationNeededEvent","callFrom","callTo","onnegotiationneeded","createOffer","then","offer","setLocalDescription","localDescription","sendWebRTCOffer","name","type","sdp","catch","error","onicecandidate","candidate","sendICECandidates","handleReceivedWebRTCOffer","a","answerFrom","user","displayName","setRemoteDescription","createAnswer","answer","sendWebRTCAnswer","handleReceivedAnswer","handleReceivedICECandidate","addIceCandidate","getActiveConnection","activeConnection","terminateConversation","sendTextMessage","messageToSend","readyState","send","shareScreenTeardown","screenSharingStream","isScreenSharing","sender","getSenders","find","kind","stop","getVideoTracks","replaceTrack","setScreenSharingEnabled","forEach","connectionTeardown","resetCallState","close","socket","registerNewUser","socketId","userCredentials","emit","fullName","broadcastHandler","ACTIVE_USERS","activeUsers","payload","ChatActionTypes","SET_ACTIVE_USERS","setActiveUsers","USERS_AVAILABLE","availableUsers","SET_AVAILABLE_USERS","setAvailableUsers","USERS_BUSY","busyUsers","SET_BUSY_USERS","setBusyUsers","callAttemptHandler","response","CALL_ACCEPTED","setCallState","CallStates","CALL_IN_PROGRESS","showCallDialog","show","CALL_REJECTED","CALL_UNAVAILABLE","CALL_AVAILABLE","callStatusHandler","status","CALL_CONNECTION_TERMINATED","callAttemptResponse","otherParty","sfx","require","CallDialog","callDialog","useSelector","state","handleHangup","hangUpTheCall","callingTo","src","default","autoPlay","loop","style","paddingBottom","display","alignItems","justifyContent","Button","startIcon","callingFrom","green","pickUpTheCall","Modal","aria-labelledby","aria-describedby","chatDirectCallStyles","height","talking","pending","backgroundImage","conversationButtonStyles","button","ConversationButton","memo","onClickHandler","children","conversationButtonsStyles","buttonContainer","bottom","left","zIndex","ConversationButtons","currentUser","targetUserId","isCameraEnabled","isMicrophoneEnabled","enable","navigator","mediaDevices","getDisplayMedia","senders","onended","setScreenSharingStream","switchToScreenSharing","microphoneEnabled","getAudioTracks","enabled","setMicrophoneEnabled","cameraEnabled","setCameraEnabled","localVideoViewStyles","localVideoContainer","borderRadius","top","right","videoElement","LocalVideoView","localVideoRef","useRef","useEffect","localVideo","current","srcObject","onloadedmetadata","play","muted","remoteVideoViewStyles","remoteVideoContainer","RemoteVideoView","remoteStream","remoteVideoRef","remoteVideo","ChatDirectCall","callState","CALL_REQUESTED","chatMessengerStyles","flexDirection","messageArea","overflowY","chatMessageStyles","overflowX","margin","minWidth","wordWrap","byWho","ChatMessage","messagePayload","otherUserName","ListItem","Grid","container","item","xs","toLocaleString","ListItemText","primary","chatMessagesFeedStyles","ChatMessagesFeed","textMessagesRef","textMessages","scrollIntoView","behavior","map","ChatMessagesBox","userTextMessage","setTextMessage","handleSubmit","preventDefault","flexFlow","onSubmit","noValidate","TextField","label","fullWidth","onChange","value","onKeyDown","Fab","ChatMessenger","Divider","OnlineBadge","badge","Badge","BusyBadge","ChatUserItem","self","busy","Fragment","ListItemIcon","Avatar","alt","overlap","setCallerName","chatUsersList","usersList","ChatUserList","filteredUsers","List","filter","activeUser","index","includes","ChatUsers","chat","searchField","setSearchField","toLowerCase","InputProps","spellCheck","chatStyles","chatSection","borderRight","Chat","socketClient","withCredentials","on","err","disconnect","getUserMedia","setLocalStream","component","Paper"],"mappings":"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","file":"static/js/8.f02be338.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ringtone_minimal.011d7af4.ogg\";","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst chatAppBarStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    maxHeight: 52,\r\n    maxWidth: 52\r\n  },\r\n}),\r\n);\r\nexport default chatAppBarStyles;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  \"data-item-type\": \"text\",\n  \"data-item\": \"Business\",\n  id: \"logo__item--business\",\n  className: \"logo__item\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  \"data-item-type\": \"image\",\n  \"data-item\": \"Image\",\n  \"data-logo-item\": \"\",\n  id: \"logo__item--logo_0\",\n  className: \"logo__item\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  className: \"logo__item__inner\",\n  transform: \"translate(853.5949391108932 363.5) scale(0.9309655130613976 0.9309655130613976) rotate(0 0 0)\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#D06200\",\n  d: \"M126.4,17.3H20.6v46.1c0.2-0.1,0.5-0.1,0.7-0.2c10.2-3,21.5-10.7,25.1-17.2c3.7-6.6-1.7-9.5-11.9-6.6   c-1.9,0.5-3.8,1.3-5.7,2.1c0.9-0.4,2-0.8,2.9-1.2c2.5-0.9,2.6-0.9,4-1.3l2-0.6c11.1-2.8,16.7,0.6,12.6,8C46.1,54.2,33,63.2,21,66.7   c-0.1,0-0.2,0.1-0.4,0.1v8.3c0.1,0,0.2,0,0.3-0.1c15.7-4.5,32.9-16.3,38.5-26.4c3.8-6.9,1.2-11.1-5.8-11.7c2.6,0.1,5.2,0.3,8.3,0.9   c4.7,1.1,5.4,1.2,9.1,2.5c5.7,2.1,7.2,7.3,3.1,14.7c-7.5,13.5-30.5,29.3-51.4,35.3c-0.7,0.2-1.4,0.4-2,0.5V102   c1.5-0.3,3-0.7,4.5-1.2c23.5-6.8,49.4-24.6,57.8-39.7c4-7.2,3.3-12.6-1.1-15.4c1.1,0.8,2.6,1.8,3.7,2.6c4,3,4.4,8.3,0.5,15.5   c-8.7,15.6-35.4,34-59.7,41c-2,0.6-3.9,1-5.8,1.4v6.7c2.5-0.5,5.2-1.1,8-1.9c25.2-7.3,53-26.3,62-42.6c3.8-6.8,3.7-12,0.4-15.3   c1.1,1.2,2.7,2.8,3.8,4.1l2.3,2.9c2.4,3.4,2.1,8.3-1.3,14.6c-9.3,16.7-37.8,36.3-63.7,43.8c-4.1,1.2-7.9,2-11.4,2.4v9.7   c4.7-0.1,10.3-1.1,16.6-2.9c25.9-7.5,54.5-27.1,63.7-43.8c3-5.4,3.6-9.8,2.2-13.1l0.6,1.6c0.7,2.1,1.7,5,2.3,7.2   c0.7,3-0.1,6.9-2.6,11.4c-9,16.2-36.8,35.3-62,42.6c-8.4,2.4-15.5,3.2-20.8,2.6v2.8c5.4,1.8,13.7,1.4,24.2-1.7   c24.3-7,51.1-25.4,59.8-41.1c2.1-3.9,3-7.2,2.7-9.9c0.1,1.4,0.3,3.2,0.3,4.5c0.1,2.5-0.8,5.5-2.6,8.9c-8.4,15.2-34.4,33-57.9,39.8   c-1.2,0.3-2.3,0.6-3.4,0.9h17.5c18.6-7.5,36.9-21.1,43.5-32.9c1.2-2.2,2-4.3,2.3-6.1c-0.9,4.5-1.2,6.1-2.2,9.1   c-1.6,4.4-1.9,5.1-3.8,8.9c0,0.1-0.1,0.2-0.1,0.2c-3.9,7.1-13.4,15-24.1,20.8h49.7V17.3z\",\n  \"data-part-id\": \"logo__item--logo_0__0\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  fill: \"#D06200\",\n  points: \"20.6,15 128.7,15 128.7,138.3 132.8,11.5\",\n  \"data-part-id\": \"logo__item--logo_0__1\"\n}))));\n\nfunction SvgLogoAppbar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"869 371 111 110\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoAppbar);\nexport default __webpack_public_path__ + \"static/media/logo_appbar.ce470a7f.svg\";\nexport { ForwardRef as ReactComponent };","import { resetCallState, setNewTextMessage, setLocalStream, setRemoteStream, setScreenSharingEnabled, setScreenSharingStream } from '../../redux/call/call.actions';\r\nimport store from '../../redux/store';\r\nimport { sendICECandidates, sendWebRTCAnswer, sendWebRTCOffer, terminateConversation } from '../webSocketConnection/webSocketConnection.service';\r\nimport { IWebRTCAnswer, IWebRTCIceCandidate, IWebRTCOffer } from './webRTC.types';\r\n\r\n/* References: \r\n  https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling\r\n  https://docs.microsoft.com/en-us/previous-versions/mt806219(v=vs.85)\r\n  https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\r\n  https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addIceCandidate\r\n*/\r\n\r\nconst configuration = {\r\n  iceServers: [\r\n    {\r\n      urls:\"stun:stun.l.google.com:19302\"\r\n    },\r\n    // Using more than 2 stun servers slows down discovery\r\n    // {\r\n    //   urls:\"stun:stun1.l.google.com:19302\"\r\n    // },\r\n    // {\r\n    //   urls:\"stun:stun2.l.google.com:19302\"\r\n    // },\r\n    // {\r\n    //   urls:\"stun:stun3.l.google.com:19302\"\r\n    // },\r\n    // {\r\n    //   urls:\"stun:stun4.l.google.com:19302\"\r\n    // }\r\n  ]\r\n}\r\n\r\nconst constraints = {\r\n  video: true,\r\n  audio: true\r\n}\r\n\r\nlet callerConnection : RTCPeerConnection;\r\n\r\nlet receiverConnection : RTCPeerConnection;\r\nlet dataChannel : RTCDataChannel;\r\n\r\nexport const setUpLocalStream = () => {\r\n  navigator.mediaDevices.getUserMedia(constraints).then(stream => {\r\n    store.dispatch(setLocalStream(stream));\r\n  }).catch(error => {\r\n    console.error('Local stream with video/audio failed', error);\r\n  });\r\n}\r\n\r\n// Caller side\r\nexport const call = (callTo: string) => {\r\n  const callFrom = store.getState().user.user?.displayName;\r\n  if (callFrom) {\r\n    // 1. Create an RTCPeerConnection\r\n    // 2. Call getUserMedia() to access the webcam and microphone\r\n    // 3. Promise fulfilled: add the local stream's tracks by calling RTCPeerConnection.addTrack();\r\n    // 4. Ready to negotiate so ask the caller to start doing so \"Event: negotiationneeded\"\r\n    invite();\r\n    // 5. Create SDP offer by calling RTCPeerConnection.createOffer();\r\n    // 6. Promise fulfilled: set the description RTCPeerConnection.setLocalDescription()\r\n    // 7. Send the message offer through the signaling server\r\n    handleNegotiationNeededEvent(callFrom, callTo);\r\n  }\r\n}\r\n\r\nconst invite = () => {\r\n  callerConnection = new RTCPeerConnection(configuration);\r\n  dataChannel = callerConnection.createDataChannel(\"messenger\");\r\n\r\n  const localStream = store.getState().call.localStream;\r\n\r\n  if (localStream) {\r\n    for (const track of localStream.getTracks()) {\r\n      callerConnection.addTrack(track, localStream);\r\n    }\r\n  }\r\n  callerConnection.ontrack = ({ streams: [stream] }) => {\r\n    store.dispatch(setRemoteStream(stream));\r\n  }\r\n\r\n  // messenger\r\n  callerConnection.ondatachannel = (event) => {\r\n    const dataChannel = event.channel;\r\n\r\n    dataChannel.onopen = () => {\r\n      console.log('Data channel established connection');\r\n    }\r\n\r\n    dataChannel.onmessage = (event) => {\r\n      const message = String(event.data);\r\n      store.dispatch(setNewTextMessage({\r\n        message: message,\r\n        from: 'other',\r\n        date: new Date()\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nconst handleNegotiationNeededEvent = (callFrom: string, callTo: string) => {\r\n\r\n  callerConnection.onnegotiationneeded = () => {\r\n    console.log('onnegotiationneeded');\r\n    callerConnection.createOffer().then(function(offer) {\r\n      return callerConnection.setLocalDescription(offer);\r\n    }).then(() => {\r\n      if (callerConnection.localDescription) {\r\n        sendWebRTCOffer({\r\n          name: callFrom,\r\n          target: callTo,\r\n          type: \"video-offer\",\r\n          sdp: callerConnection.localDescription\r\n        });\r\n      }\r\n    }).catch((error) => {\r\n      console.error('Failed to send offer to the remote peer through signaling server');\r\n    });\r\n  }\r\n\r\n  callerConnection.onicecandidate = (event: RTCPeerConnectionIceEvent) => {\r\n    if (event.candidate) {\r\n      sendICECandidates({\r\n        name: callFrom,\r\n        target: callTo,\r\n        type: 'to_receiver',\r\n        candidate: event.candidate\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Callee side\r\n\r\n// 1. Create an RTCPeerConnection\r\n// 2. Create an RTCSessionDescription using the received SDP offer\r\n// 3. Call RTCPeerConnection.setRemoteDescription() to tell webRTC about caller's configuraiton\r\n// 4. Call getUserMedia() to access the webcam and microphone\r\n// 5. Promise fulfileld: add the local stream's tracks by calling RTCPeerConnection.addTrack()\r\n// 6. RTCPeerConnection.createAnswer() to create an SDP answer to send to caller\r\n\r\nexport const handleReceivedWebRTCOffer = async (data : IWebRTCOffer) => {\r\n  const answerFrom = store.getState().user.user?.displayName;\r\n  if (data && data.sdp && answerFrom) {\r\n    receiverConnection = new RTCPeerConnection(configuration);\r\n    dataChannel = receiverConnection.createDataChannel(\"messenger\");\r\n\r\n    const localStream = store.getState().call.localStream;\r\n    if (localStream) {\r\n      for (const track of localStream.getTracks()) {\r\n        receiverConnection.addTrack(track, localStream);\r\n      }\r\n    }\r\n\r\n    receiverConnection.ontrack = ({ streams: [stream] }) => {\r\n      console.log('Streams', stream.getTracks());\r\n      store.dispatch(setRemoteStream(stream));\r\n    } \r\n\r\n    await receiverConnection.setRemoteDescription(data.sdp);\r\n\r\n    const answer = await receiverConnection.createAnswer();\r\n    await receiverConnection.setLocalDescription(answer);\r\n    sendWebRTCAnswer({\r\n      name: answerFrom,\r\n      target: data.target,\r\n      answer: answer\r\n    });\r\n  \r\n    receiverConnection.onicecandidate = (event: RTCPeerConnectionIceEvent) => {\r\n      if (event.candidate) {\r\n        sendICECandidates({\r\n          name: answerFrom,\r\n          target: data.target,\r\n          type: 'to_caller',\r\n          candidate: event.candidate\r\n        });\r\n      }\r\n    }\r\n\r\n    // messenger \r\n    receiverConnection.ondatachannel = (event) => {\r\n      const dataChannel = event.channel;\r\n  \r\n      dataChannel.onopen = () => {\r\n        console.log('Data channel established connection');\r\n      }\r\n  \r\n      dataChannel.onmessage = (event) => {\r\n        const message = String(event.data);\r\n        store.dispatch(setNewTextMessage({\r\n          message: message,\r\n          from: 'other',\r\n          date: new Date()\r\n        }));\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const handleReceivedAnswer = async (data: IWebRTCAnswer) => {\r\n  try {\r\n    await callerConnection.setRemoteDescription(data.answer);\r\n  } catch (error) {\r\n    console.error('Failed to set remote description', error);\r\n  }\r\n}\r\n\r\nexport const handleReceivedICECandidate = async (data: IWebRTCIceCandidate) => {\r\n  try {\r\n    if (data.type) {\r\n      if (data.type === 'to_receiver') {\r\n        await receiverConnection.addIceCandidate(data.candidate);\r\n      } else if (data.type === 'to_caller'){\r\n        await callerConnection.addIceCandidate(data.candidate);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to add ICE candidate', error);\r\n  }\r\n}\r\n\r\nexport const switchToScreenSharing = (enable: boolean) => {\r\n  if (enable) {\r\n    let activeConnection = getActiveConnection();\r\n    if (activeConnection) {\r\n      console.log('ENABLE');\r\n      const mediaDevices = navigator.mediaDevices as any;\r\n      mediaDevices.getDisplayMedia({\r\n        video: true\r\n      }).then((stream : MediaStream) => {\r\n        if (activeConnection) {\r\n          // determine the video track sender\r\n          const senders = activeConnection.getSenders();      \r\n          console.log('SENDERS', senders);\r\n          console.log('Video track', stream.getVideoTracks());\r\n\r\n          const sender = senders.find(sender => sender.track!.kind === stream.getVideoTracks()[0].kind);\r\n       \r\n          console.log('SENDER', sender);\r\n          if (sender) {\r\n            sender.replaceTrack(stream.getVideoTracks()[0]);\r\n          }\r\n      \r\n          store.dispatch(setScreenSharingEnabled(true));\r\n\r\n          stream.getVideoTracks()[0].onended = function () {\r\n            shareScreenTeardown(activeConnection);\r\n          };\r\n          store.dispatch(setScreenSharingStream(stream));\r\n        }\r\n      })\r\n      .catch((error: any) => {\r\n        console.error('Screen share failed', error);\r\n      });\r\n    }\r\n  } else {\r\n    let activeConnection = getActiveConnection();\r\n    if (activeConnection) {\r\n      shareScreenTeardown(activeConnection);\r\n      // setUpLocalStream();\r\n    }\r\n  }\r\n}\r\n\r\nconst getActiveConnection = () => {\r\n  let activeConnection: RTCPeerConnection | undefined;\r\n\r\n  if (callerConnection) {\r\n    activeConnection = callerConnection;\r\n  } else if (receiverConnection) {\r\n    activeConnection = receiverConnection;\r\n  } else {\r\n    const user = store.getState().user.user;\r\n    const name = store.getState().call.name;\r\n    if (user && name) {\r\n      terminateConversation(user, name);\r\n    }\r\n  }\r\n\r\n  return activeConnection;\r\n}\r\n\r\nexport const sendTextMessage = (messageToSend: string) => {\r\n  if (dataChannel && dataChannel.readyState === 'open' && messageToSend) {\r\n    const message = String(messageToSend);\r\n    dataChannel.send(message);\r\n    store.dispatch(setNewTextMessage({\r\n      message: message,\r\n      from: 'me',\r\n      date: new Date()\r\n    }));\r\n  }\r\n}\r\n\r\nconst shareScreenTeardown = (activeConnection: RTCPeerConnection | undefined) => {\r\n  let localStream = store.getState().call.localStream;\r\n  let screenSharingStream = store.getState().call.screenSharingStream;\r\n  let isScreenSharing = store.getState().call.isScreenSharing;\r\n\r\n  if (activeConnection && localStream) {\r\n    const senders = activeConnection.getSenders();\r\n    // const sender = senders.find(sender => sender.track!.kind === localStream!.getVideoTracks()[0].kind);\r\n    const sender = senders.find(sender => {\r\n      if (sender.track) { return sender.track!.kind === \"video\"} else return null;\r\n    });\r\n    if (sender) {\r\n      sender.track?.stop();\r\n      if (localStream.getVideoTracks().length > 0) {\r\n        sender.replaceTrack(localStream.getVideoTracks()[0]);\r\n      }\r\n      \r\n    }\r\n    store.dispatch(setScreenSharingEnabled(false));\r\n  }\r\n  if (screenSharingStream && isScreenSharing) {\r\n    screenSharingStream.getTracks().forEach(track => track.stop());\r\n  }\r\n  // setUpLocalStream();\r\n}\r\n\r\nexport const connectionTeardown = () => {\r\n  let activeConnection = getActiveConnection();\r\n  let isScreenSharing = store.getState().call.isScreenSharing;\r\n  if (isScreenSharing) {\r\n    shareScreenTeardown(activeConnection);\r\n  }\r\n  store.dispatch(resetCallState());\r\n\r\n  if (callerConnection) {\r\n    callerConnection.close();\r\n  } \r\n  if (receiverConnection) {\r\n    receiverConnection.close();\r\n  }\r\n  if (dataChannel) {\r\n    dataChannel.close();\r\n  }\r\n}","export enum BROADCAST {\r\n  ACTIVE_USERS = 'ACTIVE_USERS',\r\n  USERS_AVAILABLE = 'USERS_AVAILABLE',\r\n  USERS_BUSY = 'USERS_BUSY'\r\n};\r\n\r\nexport interface IBroadcastData {\r\n  event: BROADCAST,\r\n  payload: any\r\n}\r\n\r\nexport interface ICallAttempt {\r\n  name: string,\r\n  target: string,\r\n  type: string,\r\n}\r\n\r\nexport interface ICallAttemptResponse {\r\n  name: string,\r\n  target: string,\r\n  response: CallAttemptResponse\r\n}\r\n\r\nexport enum CallAttemptResponse {\r\n  CALL_ACCEPTED = 'CALL_ACCEPTED',\r\n  CALL_REJECTED = 'CALL_REJECTED',\r\n  CALL_UNAVAILABLE = 'CALL_UNAVAILABLE',\r\n}\r\n\r\nexport enum CallConnectionStatus {\r\n  CALL_CONNECTION_TERMINATED= 'CALL_CONNECTION_TERMINATED',\r\n}\r\n\r\nexport interface ICallStatusChange {\r\n  name: string,\r\n  target: string,\r\n  status: CallConnectionStatus\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport chatAppBarStyles from './chat-app-bar.styles';\r\nimport { ReactComponent as JuptrLogo } from '../../../assets/logo_appbar.svg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signOutStart } from '../../../redux/auth/auth.actions';\r\n\r\nconst ChatAppBar: React.FC = () => {\r\n  const classes = chatAppBarStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    setAnchorEl(null);\r\n    dispatch(signOutStart());\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n          <JuptrLogo className={classes.logo} />\r\n          </Typography>\r\n          <div>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleSignOut}>Sign Out</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatAppBar;","import { Tooltip } from \"@material-ui/core\";\r\nimport { createStyles, makeStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst callDialogStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  dialogText: {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  }\r\n}),\r\n);\r\n\r\nexport const CallDialogToolTip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default callDialogStyles;","import socketClient, { Socket } from 'socket.io-client';\r\nimport { setCallerName, setCallState, showCallDialog } from '../../redux/call/call.actions';\r\nimport { CallStates } from '../../redux/call/call.types';\r\nimport { setActiveUsers, setAvailableUsers, setBusyUsers } from '../../redux/chat/chat.actions';\r\nimport store from '../../redux/store';\r\nimport ILoggedIn from '../../types/logged-in.interface';\r\nimport { call, connectionTeardown, handleReceivedAnswer, handleReceivedICECandidate, handleReceivedWebRTCOffer } from '../webRTC/webRTC.service';\r\nimport { IWebRTCAnswer, IWebRTCIceCandidate, IWebRTCOffer } from '../webRTC/webRTC.types';\r\nimport { BROADCAST, CallAttemptResponse, CallConnectionStatus, IBroadcastData, ICallAttempt, ICallAttemptResponse, ICallStatusChange} from './webSocket.types';\r\n\r\n// const SERVER = 'https://juptr-mart112.herokuapp.com';\r\n// const SERVER = 'https://juptr-martin112.netlify.app';\r\nconst SERVER = 'http://localhost:5000';\r\n\r\nlet socket : Socket;\r\n\r\nexport const connectWithWebSocket = () => {\r\n  socket = socketClient(SERVER, {\r\n    withCredentials: true\r\n  });\r\n  \r\n  socket.on('connect', () => {\r\n    registerNewUser(socket.id)\r\n  });\r\n\r\n  socket.on('broadcast', (data) => {\r\n    broadcastHandler(data);\r\n  });\r\n\r\n  socket.on('connect_error', err => {\r\n    socket.disconnect();\r\n    // store.dispatch(signOutStart());\r\n  });\r\n\r\n  \r\n  // WebRTC event listeners \r\n  socket.on('webRTC-offer', (data : IWebRTCOffer) => {\r\n    handleReceivedWebRTCOffer(data);\r\n  });\r\n\r\n  socket.on('webRTC-answer', (data: IWebRTCAnswer) => {\r\n    handleReceivedAnswer(data);\r\n  });\r\n\r\n  socket.on('webRTC-candidate', (data: IWebRTCIceCandidate) => {\r\n    handleReceivedICECandidate(data);\r\n  });\r\n\r\n  // Call Attempt listeners\r\n  socket.on('callAttempt', (data: ICallAttempt) => {\r\n    store.dispatch(setCallState(CallStates.CALL_REQUESTED));\r\n    store.dispatch(showCallDialog({\r\n      type: data.type,\r\n      show: true\r\n    }));\r\n    store.dispatch(setCallerName(data.target));\r\n  });\r\n\r\n  socket.on('callAttemptResponse', (data: ICallAttemptResponse) => {\r\n    if (data) {\r\n      callAttemptHandler(data);\r\n    }\r\n  });\r\n\r\n  socket.on('callStatusChange', (data: ICallStatusChange) => {\r\n    if (data) {\r\n      callStatusHandler(data);\r\n    }\r\n  });\r\n}\r\n\r\nexport const disconnectWebSocket = () => {\r\n  if (socket) {\r\n    socket.disconnect();\r\n  }\r\n}\r\n\r\nconst registerNewUser = (socketId: string) => {\r\n  let userCredentials : ILoggedIn | null | undefined = store.getState().user.user;\r\n\r\n  if (socketId && userCredentials?.displayName) {\r\n    socket.emit('register-new-user', { \r\n      displayName: userCredentials?.displayName,\r\n      fullName: userCredentials?.fullName,\r\n      socketId: socketId,\r\n    });\r\n  }\r\n}\r\n\r\nconst broadcastHandler = (data: IBroadcastData) => {\r\n  switch (data.event) {\r\n    case BROADCAST.ACTIVE_USERS:\r\n      const activeUsers = data.payload;\r\n      store.dispatch(setActiveUsers(activeUsers));\r\n      break;\r\n    case BROADCAST.USERS_AVAILABLE:\r\n      const availableUsers = data.payload;\r\n      store.dispatch(setAvailableUsers(availableUsers));\r\n      break;\r\n    case BROADCAST.USERS_BUSY: \r\n      const busyUsers = data.payload;\r\n      store.dispatch(setBusyUsers(busyUsers));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\n// accept/decline logic\r\nconst callAttemptHandler = (data: ICallAttemptResponse) => {\r\n  switch (data.response) {\r\n    case CallAttemptResponse.CALL_ACCEPTED:\r\n      if (data && data.target) {\r\n      store.dispatch(setCallState(CallStates.CALL_IN_PROGRESS));\r\n        store.dispatch(showCallDialog({\r\n          show: false\r\n        }));\r\n        // console.log('------------------------------');\r\n        // console.log(data.target);\r\n        call(data.target)\r\n      }\r\n      break;\r\n    case CallAttemptResponse.CALL_REJECTED:\r\n      store.dispatch(showCallDialog({\r\n        type: '',\r\n        show: false\r\n      }));\r\n      store.dispatch(setCallState(CallStates.CALL_AVAILABLE));\r\n      break;\r\n    case CallAttemptResponse.CALL_UNAVAILABLE:\r\n      store.dispatch(showCallDialog({\r\n        type: '',\r\n        show: false\r\n      }));\r\n      store.dispatch(setCallState(CallStates.CALL_AVAILABLE));\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst callStatusHandler = (data: ICallStatusChange) => {\r\n  switch (data.status) {\r\n    case CallConnectionStatus.CALL_CONNECTION_TERMINATED:\r\n      if (data && data.target) {\r\n        connectionTeardown();\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n} \r\n\r\n\r\nexport const sendWebRTCOffer = (data: IWebRTCOffer) => {\r\n  socket.emit('webRTC-offer', data);\r\n}\r\n\r\nexport const sendICECandidates = (data: IWebRTCIceCandidate) => {\r\n  socket.emit('webRTC-candidate', data);\r\n}\r\n\r\nexport const sendWebRTCAnswer = (data: IWebRTCAnswer) => {\r\n  socket.emit('webRTC-answer', data);\r\n}\r\n\r\nexport const callAttempt = (data: ICallAttempt) => {\r\n  store.dispatch(setCallerName(data.target));\r\n  store.dispatch(setCallState(CallStates.CALL_REQUESTED));\r\n  store.dispatch(showCallDialog({\r\n    type: data.type,\r\n    show: true\r\n  }));\r\n  socket.emit('callAttempt', data);\r\n}\r\n\r\nexport const callAttemptResponse = (data: ICallAttemptResponse) => {\r\n  socket.emit('callAttemptResponse', data);\r\n}\r\n\r\nexport const callTermination = (data: ICallStatusChange) => {\r\n  socket.emit('callStatusChange', data);\r\n}\r\n\r\nexport const pickUpTheCall = (user: ILoggedIn, callFrom: string) => {\r\n  if (user && user.displayName && callFrom) {\r\n    store.dispatch(showCallDialog({\r\n      show: false\r\n    }));\r\n    callAttemptResponse({\r\n      name: user.displayName,\r\n      target: callFrom,\r\n      response: CallAttemptResponse.CALL_ACCEPTED\r\n    });\r\n    store.dispatch(setCallState(CallStates.CALL_IN_PROGRESS));\r\n  }\r\n}\r\n\r\nexport const hangUpTheCall = (user: ILoggedIn, otherParty: string) => {\r\n  if (user && user.displayName && otherParty) {\r\n    callAttemptResponse({  \r\n      name: user.displayName,\r\n      target: otherParty,\r\n      response: CallAttemptResponse.CALL_REJECTED\r\n    });\r\n    store.dispatch(setCallState(CallStates.CALL_AVAILABLE));\r\n  }\r\n}\r\n\r\nexport const terminateConversation = (user: ILoggedIn, otherParty: string) => {\r\n  if (user && user.displayName && otherParty) {\r\n    callTermination({  \r\n      name: user.displayName,\r\n      target: otherParty,\r\n      status: CallConnectionStatus.CALL_CONNECTION_TERMINATED\r\n    });\r\n  }\r\n  connectionTeardown();\r\n}","import { ChatActionTypes } from \"./chat.types\";\r\n\r\nexport const setActiveUsers = (activeUsers : string[]) => ({\r\n  type: ChatActionTypes.SET_ACTIVE_USERS,\r\n  payload: activeUsers\r\n});\r\n\r\nexport const setBusyUsers = (busyUsers : string[]) => ({\r\n  type: ChatActionTypes.SET_BUSY_USERS,\r\n  payload: busyUsers\r\n});\r\n\r\nexport const setAvailableUsers = (availableUsers : string[]) => ({\r\n  type: ChatActionTypes.SET_AVAILABLE_USERS,\r\n  payload: availableUsers\r\n});\r\n","import React from 'react';\r\n\r\nimport callDialogStyles, { CallDialogToolTip } from './call-dialog.styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/store';\r\nimport { hangUpTheCall, pickUpTheCall } from '../../../../utils/webSocketConnection/webSocketConnection.service';\r\nconst sfx = require('../../../../assets/sounds/ringtone_minimal.ogg');\r\n\r\ninterface Props {\r\n  name: string\r\n}\r\n\r\nconst CallDialog: React.FC<Props> = (props) => {\r\n  \r\n  const callDialog = useSelector((state: RootState) => state.call.showCallDialog);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n\r\n  const name = props.name;\r\n\r\n  const classes = callDialogStyles();\r\n\r\n  const handleAnswer = () => {\r\n    if (user) {\r\n      pickUpTheCall(user, name);\r\n    }\r\n  }\r\n\r\n  const handleHangup = () => {\r\n    if (user) {\r\n      hangUpTheCall(user, name);\r\n    }\r\n  }\r\n\r\n  const callingTo = (\r\n    <div className={classes.paper}>\r\n      <audio src={sfx.default} autoPlay loop />  \r\n      <CallDialogToolTip title={name}>\r\n        <h2 style={{ paddingBottom: 25 }} id=\"call-dialog-title\" className={classes.dialogText}>Calling: {name}</h2>\r\n      </CallDialogToolTip>\r\n      <p id=\"call-dialog-description\" style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\r\n      <Button variant=\"contained\" \r\n        startIcon={<CallEndIcon color=\"secondary\"  style={{ fontSize: 50 }}/>}\r\n        onClick={handleHangup}\r\n        >\r\n        Hang Up\r\n      </Button>\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  const callingFrom = (\r\n    <div className={classes.paper}>\r\n    <h2 style={{ paddingBottom: 25 }} id=\"call-dialog-title\" className={classes.dialogText}>Call from: {name}</h2>\r\n    <p id=\"call-dialog-description\" style={{display:'flex',alignItems:'center',justifyContent:'space-between'}}>\r\n    <audio src={sfx.default} autoPlay loop />  \r\n    <Button \r\n      variant=\"contained\" \r\n      startIcon={<CallIcon style={{ color: green[500], fontSize: 50 }}/>}\r\n      onClick={handleAnswer}\r\n      >\r\n      Answer\r\n    </Button>\r\n    <Button \r\n      variant=\"contained\" \r\n      startIcon={<CallEndIcon color=\"secondary\" \r\n      style={{ fontSize: 50 }}/>}\r\n      onClick={handleHangup}\r\n      >\r\n      Hang Up\r\n    </Button>\r\n    </p>\r\n  </div>\r\n  );\r\n\r\n  console.log(sfx);\r\n\r\n  return (\r\n    <div>\r\n      <Modal \r\n        open={callDialog.show}\r\n        aria-labelledby=\"call-dialog-title\"\r\n        aria-describedby=\"call-dialog-description\"\r\n        style={{display:'flex',alignItems:'center',justifyContent:'center'}}\r\n      >\r\n        {callDialog.show && callDialog.type === 'caller'? callingTo : callingFrom}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CallDialog;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst chatDirectCallStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  root: {\r\n    height: '100%',\r\n    position: 'relative'\r\n  },\r\n  talking: {\r\n    backgroundColor: 'black',\r\n  },\r\n  pending: {\r\n    backgroundColor: '#ffffff',\r\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%2342a5f5' fill-opacity='0.58'%3E%3Cpath d='M50 50c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c0 5.523-4.477 10-10 10s-10-4.477-10-10 4.477-10 10-10zM10 10c0-5.523 4.477-10 10-10s10 4.477 10 10-4.477 10-10 10c0 5.523-4.477 10-10 10S0 25.523 0 20s4.477-10 10-10zm10 8c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm40 40c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8z' /%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\r\n    height: '90vh'\r\n  },\r\n}),\r\n);\r\nexport default chatDirectCallStyles;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst conversationButtonStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  button: {\r\n    width: '50px',\r\n    height: '50px',\r\n  }\r\n}),\r\n);\r\nexport default conversationButtonStyles;","import React from 'react';\r\nimport conversationButtonStyles from './conversation-button.styles';\r\n\r\ninterface Props {\r\n  onClickHandler: () => void;\r\n}\r\n\r\nconst ConversationButton: React.FC<Props> = React.memo((props) => {\r\n  const onClickHandler = props.onClickHandler;\r\n  const classes = conversationButtonStyles();\r\n\r\n  return (\r\n    <button className={classes.button} onClick={onClickHandler}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n);\r\n\r\nexport default ConversationButton;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst conversationButtonsStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    zIndex: 100\r\n  },\r\n}),\r\n);\r\nexport default conversationButtonsStyles;","import React from 'react';\r\nimport ConversationButton from './conversation-button/conversation-button.component';\r\nimport conversationButtonsStyles from './conversation-buttons.styles';\r\n\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\n\r\nimport ScreenShareIcon from '@material-ui/icons/ScreenShare';\r\nimport StopScreenShareIcon from '@material-ui/icons/StopScreenShare';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { terminateConversation } from '../../../../utils/webSocketConnection/webSocketConnection.service';\r\nimport { useDispatch } from 'react-redux';\r\nimport ILoggedIn from '../../../../types/logged-in.interface';\r\nimport { setCameraEnabled, setMicrophoneEnabled } from '../../../../redux/call/call.actions';\r\nimport { switchToScreenSharing } from '../../../../utils/webRTC/webRTC.service';\r\n\r\ninterface Props {\r\n  currentUser: ILoggedIn\r\n  targetUserId: string\r\n  localStream : MediaStream | null\r\n  isScreenSharing : boolean\r\n  isCameraEnabled : boolean\r\n  isMicrophoneEnabled : boolean\r\n}\r\n\r\nconst ConversationButtons: React.FC<Props> = React.memo((props) => {\r\n  const dispatch = useDispatch();\r\n  const classes = conversationButtonsStyles();\r\n  const currentUser = props.currentUser;\r\n  const targetUserId = props.targetUserId;\r\n  const localStream = props.localStream;\r\n  const isScreenSharing = props.isScreenSharing;\r\n  const isCameraEnabled = props.isCameraEnabled;\r\n  const isMicrophoneEnabled = props.isMicrophoneEnabled;\r\n\r\n  const hangUpHandler = () => {\r\n    if (currentUser && targetUserId) {\r\n      terminateConversation(currentUser, targetUserId);\r\n    }\r\n  };\r\n\r\n  const cameraToggleHandler = () => {\r\n    const cameraEnabled = isCameraEnabled;\r\n    if (localStream && localStream.getVideoTracks().length > 0) {\r\n      localStream.getVideoTracks()[0].enabled = !cameraEnabled;\r\n      dispatch(setCameraEnabled(!cameraEnabled));\r\n    }\r\n  }\r\n\r\n  const microphoneToggleHandler = () => {\r\n    const microphoneEnabled = isMicrophoneEnabled;\r\n    if (localStream) {\r\n      localStream.getAudioTracks()[0].enabled = !microphoneEnabled;\r\n      dispatch(setMicrophoneEnabled(!microphoneEnabled));\r\n    }\r\n  }\r\n\r\n  const screenSharingToggleHandler = () => {\r\n    const screenSharingEnabled = isScreenSharing;\r\n    switchToScreenSharing(!screenSharingEnabled);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.buttonContainer}> \r\n      <ConversationButton onClickHandler={hangUpHandler}>\r\n        <CallEndIcon color=\"secondary\" style={{ fontSize: 35 }} />\r\n      </ConversationButton>\r\n      <ConversationButton onClickHandler={screenSharingToggleHandler}>\r\n        { isScreenSharing ? \r\n          <StopScreenShareIcon color=\"secondary\" style={{ fontSize: 35 }} /> :\r\n          <ScreenShareIcon color=\"primary\" style={{ fontSize: 35 }} />\r\n        }\r\n      </ConversationButton>\r\n      <ConversationButton onClickHandler={microphoneToggleHandler}>\r\n        { isMicrophoneEnabled ? \r\n          <MicOffIcon color=\"secondary\" style={{ fontSize: 35 }} /> :\r\n          <MicIcon color=\"primary\" style={{ fontSize: 35 }} />\r\n        }\r\n      </ConversationButton>\r\n      <ConversationButton onClickHandler={cameraToggleHandler}>\r\n        { isCameraEnabled ?\r\n        <VideocamOffIcon color=\"secondary\" style={{ fontSize: 35 }} /> :\r\n        <VideocamIcon color=\"primary\" style={{ fontSize: 35 }} />\r\n        }\r\n      </ConversationButton>\r\n    </div>\r\n  )\r\n}\r\n);\r\n\r\nexport default ConversationButtons;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst localVideoViewStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  localVideoContainer: {\r\n    backgroundColor: 'black',\r\n    width: '200px',\r\n    height: '150px',\r\n    borderRadius: '5px',\r\n    position: 'absolute',\r\n    top: '10%',\r\n    right: '10%',\r\n  },\r\n  videoElement: {\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n}),\r\n);\r\nexport default localVideoViewStyles;","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/store';\r\nimport localVideoViewStyles from './local-video-view.styles';\r\n\r\nconst LocalVideoView: React.FC = React.memo(() => {\r\n  const classes = localVideoViewStyles();\r\n  const localStream = useSelector((state: RootState) => state.call.localStream);\r\n  const screenSharingStream = useSelector((state: RootState) => state.call.screenSharingStream);\r\n  const isScreenSharing = useSelector((state: RootState) => state.call.isScreenSharing);\r\n\r\n  const localVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (localStream && !isScreenSharing) {\r\n      const localVideo = localVideoRef.current;\r\n      if (localVideo) {\r\n        localVideo.srcObject = localStream;\r\n        localVideo.onloadedmetadata = () => {\r\n          localVideo.play();\r\n        };\r\n      }\r\n    } else {\r\n      const localVideo = localVideoRef.current;\r\n      if (localVideo) {\r\n        localVideo.srcObject = screenSharingStream;\r\n        localVideo.onloadedmetadata = () => {\r\n          localVideo.play();\r\n        };\r\n      }\r\n    }\r\n  }, [localStream, isScreenSharing, screenSharingStream]);\r\n\r\n  return (\r\n    \r\n    <div className={classes.localVideoContainer}>\r\n      <video className={classes.videoElement} ref={localVideoRef} autoPlay muted />\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nexport default LocalVideoView;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst remoteVideoViewStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  remoteVideoContainer: {\r\n  },\r\n  videoElement: {\r\n    width: '100%',\r\n    height: '90vh'\r\n  }\r\n}),\r\n);\r\nexport default remoteVideoViewStyles;","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/store';\r\nimport remoteVideoViewStyles from './remote-video-view.styles';\r\n\r\nconst RemoteVideoView: React.FC = React.memo(() => {\r\n  const classes = remoteVideoViewStyles();\r\n  const remoteStream = useSelector((state: RootState) => state.call.remoteStream);\r\n  const remoteVideoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (remoteStream) {\r\n      console.log('REMOTE STREAM', remoteStream);\r\n      console.log('TRACKS', remoteStream.getTracks());\r\n      const remoteVideo = remoteVideoRef.current;\r\n      if (remoteVideo) {\r\n        remoteVideo.srcObject = remoteStream;\r\n        remoteVideo.onloadedmetadata = () => {\r\n          remoteVideo.play();\r\n        };\r\n      }\r\n    }\r\n  }, [remoteStream]);\r\n\r\n  return (\r\n    <div className={classes.remoteVideoContainer}>\r\n      <video className={classes.videoElement} ref={remoteVideoRef} autoPlay />\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nexport default RemoteVideoView;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CallStates } from '../../../redux/call/call.types';\r\nimport { RootState } from '../../../redux/store';\r\nimport CallDialog from './call-dialog/call-dialog.component';\r\nimport chatDirectCallStyles from './chat-direct-call.styles';\r\nimport ConversationButtons from './conversation-buttons/conversation-buttons.component';\r\nimport LocalVideoView from './local-video-view/local-video-view.component';\r\nimport RemoteVideoView from './remote-video-view/remote-video-view.component';\r\n\r\nconst ChatDirectCall: React.FC = React.memo(() => {\r\n  const classes = chatDirectCallStyles();\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const localStream = useSelector((state: RootState) => state.call.localStream);\r\n  const remoteStream = useSelector((state: RootState) => state.call.remoteStream);\r\n  const callState = useSelector((state: RootState) => state.call.callState);\r\n  const name = useSelector((state: RootState) => state.call.name);\r\n  const isScreenSharing = useSelector((state: RootState) => state.call.isScreenSharing);\r\n  const isCameraEnabled = useSelector((state: RootState) => state.call.isCameraEnabled);\r\n  const isMicrophoneEnabled = useSelector((state: RootState) => state.call.isMicrophoneEnabled);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LocalVideoView />\r\n      {callState === CallStates.CALL_REQUESTED ?\r\n        <CallDialog name={name} />: null\r\n      }\r\n      <div className={remoteStream && callState === CallStates.CALL_IN_PROGRESS ? classes.talking : classes.pending} >\r\n        {user && callState === CallStates.CALL_IN_PROGRESS ? \r\n          <ConversationButtons \r\n            currentUser={user}\r\n            targetUserId={name}\r\n            localStream={localStream}\r\n            isScreenSharing={isScreenSharing}\r\n            isCameraEnabled={isCameraEnabled}\r\n            isMicrophoneEnabled={isMicrophoneEnabled}\r\n          /> \r\n          : null \r\n        }\r\n        {remoteStream && callState === CallStates.CALL_IN_PROGRESS ? <RemoteVideoView /> : \r\n        \r\n        null\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nexport default ChatDirectCall;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst chatMessengerStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  root: {\r\n    height: '90vh',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end'\r\n  },\r\n  messageArea: {\r\n    overflowY: 'scroll'\r\n  }\r\n}),\r\n);\r\nexport default chatMessengerStyles;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst chatMessageStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  messageArea: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden'\r\n  },\r\n  message: {\r\n    borderRadius: \"10px\",\r\n    boxShadow: '2px 2px 2px 1px rgba(0, 0, 0, 0.3)',\r\n    margin: \"5px\",\r\n    padding: \"10px\",\r\n    display: \"inline-block\",\r\n    minWidth: \"100px\",\r\n    maxWidth: \"250px\",\r\n    color: 'whitesmoke',\r\n    wordWrap: 'break-word'\r\n  },\r\n  right: {\r\n    justifyContent: 'flex-end !important',\r\n  },\r\n  left: {\r\n    justifyContent: 'flex-start !important'\r\n  },\r\n  byWho: {\r\n    overflow: 'hidden',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n  }\r\n}),\r\n);\r\nexport default chatMessageStyles;","import { ListItem, Grid, ListItemText } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { ITextMessage } from '../../../../redux/call/call.types';\r\nimport chatMessageStyles from './chat-message.styles';\r\n\r\ninterface Props {\r\n  message: ITextMessage,\r\n  name: string | undefined, \r\n}\r\n\r\nconst ChatMessage: React.FC<Props> = React.memo((props) => {\r\n  const classes = chatMessageStyles();\r\n  const messagePayload = props.message;\r\n  const otherUserName = props.name;\r\n\r\n  return (\r\n    <ListItem>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <div className={`${classes.messageArea} ${ (messagePayload.from === 'me')? classes.left : classes.right } `}>\r\n            <div className={`${classes.message}`} style={ \r\n              (messagePayload.from === 'me')?\r\n              { background: '#3f51b5'}:\r\n              { background: '#c77708'}\r\n            }\r\n            >\r\n              <div className={classes.byWho}>\r\n                <strong>{otherUserName}</strong>\r\n              </div>\r\n              <div>\r\n                { String(messagePayload.date?.toLocaleString()) }\r\n              </div>\r\n              <ListItemText primary={ messagePayload.message }> </ListItemText>\r\n            </div>\r\n          </div>\r\n        </Grid> \r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n}\r\n);\r\n\r\nexport default ChatMessage;","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nconst chatMessagesFeedStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  messageArea: {\r\n    overflowY: 'scroll'\r\n  }\r\n}),\r\n);\r\nexport default chatMessagesFeedStyles;","\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../../redux/store';\r\nimport ChatMessage from '../chat-message/chat-message.component';\r\nimport chatMessagesFeedStyles from './chat-messages-feed.styles';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ChatMessagesFeed: React.FC<Props> = (props) => {\r\n  const classes = chatMessagesFeedStyles();\r\n  const textMessagesRef = useRef<HTMLDivElement>(null);\r\n  const textMessages = useSelector((state: RootState) => state.call.textMessages); \r\n  const name = useSelector((state: RootState) => state.call.name);\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n\r\n  useEffect(() => {\r\n    textMessagesRef.current?.scrollIntoView({ behavior: 'smooth'});\r\n  }, [textMessages]);\r\n\r\n  return (\r\n    <div className={classes.messageArea}>\r\n      {textMessages.map((message, i) => (\r\n        <div key={i} ref={textMessagesRef}>\r\n          <ChatMessage message={message} name={ message.from === 'other'? name :  user?.displayName} key={i} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatMessagesFeed;","\r\nimport React from 'react';\r\nimport { sendTextMessage } from '../../../../utils/webRTC/webRTC.service';\r\nimport { Grid, TextField, Fab} from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\ninterface Props {\r\n}\r\n\r\nconst ChatMessagesBox: React.FC<Props> = (props) => {\r\n  const [userTextMessage, setTextMessage] = React.useState<{ message: string }>({ message: ''});\r\n  const { message } = userTextMessage;\r\n  \r\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (message) {\r\n      sendTextMessage(message);\r\n    }\r\n    setTextMessage(message => ({ message: '' }));\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n    setTextMessage(message => ({ message: value }));\r\n  };\r\n\r\n  const onEnterPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === 'Enter') {\r\n      if (message) {\r\n        console.log('message', message);\r\n        sendTextMessage(message);\r\n      }\r\n      setTextMessage((message) => ({ message: '' }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container style={{padding: '20px'}}>\r\n        <form style={{\r\n          display: 'flex',\r\n          flexFlow: 'row wrap',\r\n          alignItems: 'center',\r\n          width: '95%'\r\n        }} onSubmit={handleSubmit} noValidate>\r\n          <Grid item xs={11}>\r\n              <TextField id=\"outlined-basic-email\" label=\"Type your message\" fullWidth \r\n                onChange={handleChange}\r\n                onKeyDown={onEnterPressed}\r\n                value={message}\r\n              />\r\n          </Grid>\r\n          <Grid xs={1}>\r\n            <Fab color=\"primary\" aria-label=\"send\" type=\"submit\">\r\n              <SendIcon />\r\n            </Fab>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n  );\r\n}\r\n\r\nexport default ChatMessagesBox;","import { Divider} from '@material-ui/core';\r\nimport React from 'react';\r\nimport chatMessengerStyles from './chat-messenger.styles';\r\nimport ChatMessagesFeed from './chat-message-feed/chat-messages-feed.component';\r\nimport ChatMessagesBox from './chat-message-box/chat-messages-box.component';\r\n\r\nconst ChatMessenger: React.FC = () => {\r\n  const classes = chatMessengerStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ChatMessagesFeed />\r\n      <Divider />\r\n      <ChatMessagesBox />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatMessenger;","import Badge from '@material-ui/core/Badge';\r\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles';\r\n\r\nexport const OnlineBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: '#44b700',\r\n      color: '#44b700',\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  }),\r\n)(Badge);\r\n\r\nexport const BusyBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: 'red',\r\n      color: 'red',\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  }),\r\n)(Badge);","import { ListItem, ListItemIcon, Avatar, ListItemText, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { callAttempt } from '../../../../utils/webSocketConnection/webSocketConnection.service';\r\nimport { OnlineBadge, BusyBadge } from './chat-user-item.styles';\r\n\r\ninterface Props {\r\n  displayName: string | undefined;\r\n  fullName?: string | undefined;\r\n  from?: string | undefined;\r\n  self: boolean;\r\n  busy: boolean;\r\n}\r\n\r\nconst ChatUserItem: React.FC<Props> = ({ displayName, fullName, from, self, busy } : Props) => {\r\n\r\n  const callSomeone = (event: React.MouseEvent<HTMLElement>) => {\r\n  if (displayName && from) {\r\n    callAttempt({\r\n      name: from,\r\n      target: displayName,\r\n      type: 'caller'\r\n    });\r\n  }\r\n  };\r\n\r\n  return (\r\n  <React.Fragment>\r\n    <div style={{\r\n                whiteSpace: 'nowrap',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis'\r\n            }}>\r\n      <ListItem button key={displayName}>\r\n        <ListItemIcon>\r\n\r\n          {!self ?\r\n             busy ?\r\n            <BusyBadge\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            variant=\"dot\"\r\n            >\r\n              <Avatar alt={displayName} src=\"#\" />\r\n            </BusyBadge>\r\n            :\r\n            <OnlineBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              variant=\"dot\"\r\n              >\r\n              <Avatar alt={displayName} src=\"#\" />\r\n            </OnlineBadge> \r\n            :\r\n            <Avatar alt={displayName} src=\"#\" />\r\n          }\r\n\r\n        </ListItemIcon>\r\n        <ListItemText primary={ displayName }></ListItemText> \r\n\r\n        { !self && !busy ? \r\n          <Button variant=\"contained\" \r\n          onClick={callSomeone}\r\n          >\r\n          Call\r\n          </Button> : null\r\n        }\r\n      </ListItem>\r\n    </div>\r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ChatUserItem;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst chatUsersList = makeStyles((theme) => ({\r\n  usersList: {\r\n    overflowY: 'auto'\r\n  }\r\n}));\r\n\r\nexport default chatUsersList;","import { List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ILoggedIn from '../../../../types/logged-in.interface';\r\nimport ChatUserItem from '../chat-user-item/chat-user-item.component';\r\nimport chatUsersList from './chat-user-list.styles';\r\n\r\ninterface Props {\r\n  filteredUsers: string[],\r\n  activeUsers: string[],\r\n  user: ILoggedIn,\r\n  busyUsers: string[],\r\n}\r\n\r\nconst ChatUserList: React.FC<Props> = React.memo((props) => {\r\n  const classes = chatUsersList();\r\n\r\n  const filteredUsers = props.filteredUsers;\r\n  const activeUsers = props.activeUsers;\r\n  const user = props.user;\r\n  const busyUsers = props.busyUsers;\r\n\r\n  return (\r\n  <div className={classes.usersList}>\r\n     <List>\r\n        {\r\n          (activeUsers.length <= 1)?\r\n          <ListItem button key={'no_users'}>\r\n            <ListItemText>\r\n              No users online\r\n            </ListItemText> \r\n          </ListItem>\r\n          :\r\n          filteredUsers.filter((activeUser) => activeUser !== user?.displayName).map((activeUser, index) => \r\n            <ChatUserItem displayName={activeUser} key={index} from={user?.displayName} self={false} \r\n              busy={\r\n                busyUsers.includes(activeUser)\r\n              } />\r\n          )\r\n        }\r\n      </List>\r\n  </div>\r\n  );\r\n}\r\n);\r\n\r\nexport default ChatUserList;","import React, { useState } from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../../redux/store';\r\nimport ChatUserItem from './chat-user-item/chat-user-item.component';\r\nimport ChatUserList from './chat-user-list/chat-user-list.component';\r\n\r\nconst ChatUsers: React.FC = React.memo(() => {\r\n  const user = useSelector((state: RootState) => state.user.user);\r\n  const activeUsers = useSelector((state: RootState) => state.chat.activeUsers);\r\n  const busyUsers = useSelector((state: RootState) => state.chat.busyUsers);\r\n  const [searchField, setSearchField] = useState('');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target;\r\n    setSearchField(value);\r\n  }\r\n\r\n  const filteredUsers = activeUsers.filter(activeUser => {\r\n    return activeUser.toLowerCase().includes(searchField.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ChatUserItem displayName={user?.displayName} fullName={user?.fullName} key={'currentUser'} self={true} busy={true} />\r\n      <Divider />\r\n      <Grid item xs={12} style={{padding: '10px'}}>\r\n        <TextField \r\n          id=\"outlined-basic-email\" \r\n          label=\"Search by user id\" \r\n          variant=\"outlined\" \r\n          fullWidth \r\n          onChange={handleChange}\r\n          InputProps={{\r\n            spellCheck: 'false',\r\n          }}\r\n          />\r\n      </Grid>\r\n      <Divider />\r\n      {\r\n      user ? \r\n        <ChatUserList user={user} filteredUsers={filteredUsers} activeUsers={activeUsers} busyUsers={busyUsers}/> //availableUsers={availableUsers}/>\r\n        : \"You must be logged in\"\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n);\r\n\r\nexport default ChatUsers;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst chatStyles = makeStyles((theme) => ({\r\n  chatSection: {\r\n    width: '100%',\r\n    height: '92vh'\r\n  },\r\n  borderRight: {\r\n    borderRight: '1px solid #e0e0e0',\r\n    padding: '5px'\r\n  },\r\n}));\r\n\r\nexport default chatStyles;","import Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useEffect } from 'react';\r\nimport ChatAppBar from '../../components/chat-app/chat-app-bar/chat-app-bar.component';\r\nimport ChatDirectCall from '../../components/chat-app/chat-direct-call/chat-direct-call.component';\r\nimport ChatMessenger from '../../components/chat-app/chat-messenger/chat-messenger.component';\r\nimport ChatUsers from '../../components/chat-app/chat-users/chat-users.component';\r\nimport { setUpLocalStream } from '../../utils/webRTC/webRTC.service';\r\nimport { connectWithWebSocket, disconnectWebSocket } from '../../utils/webSocketConnection/webSocketConnection.service';\r\nimport chatStyles from './chat.styles';\r\n\r\nconst Chat: React.FC = React.memo(() => {\r\n\r\n  const classes = chatStyles();\r\n\r\n  useEffect(()=>{\r\n    connectWithWebSocket();\r\n    return function cleanup() {\r\n      disconnectWebSocket();\r\n    }\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    setUpLocalStream();\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <ChatAppBar />\r\n      <Grid container component={Paper} className={classes.chatSection}>\r\n        <Grid item xs={2} className={classes.borderRight}>\r\n          <ChatUsers />\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.borderRight}>\r\n          <ChatDirectCall />\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.borderRight}>\r\n          <ChatMessenger />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n);\r\n\r\nexport default Chat;"],"sourceRoot":""}